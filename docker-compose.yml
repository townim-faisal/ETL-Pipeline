version: '3.4'

services:
# SOURCE DB
  mysql:
    image: mysql:latest
    restart: always
    volumes:
      - ./mysql/data:/var/lib/mysql
    ports:
      - ${SOURCE_DB_PORT}:3306
    environment:
      MYSQL_DATABASE: ${SOURCE_DB_DATABASE}
      MYSQL_USER: ${SOURCE_DB_USER}
      MYSQL_PASSWORD: ${SOURCE_DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${SOURCE_DB_ROOT_PASSWORD}

  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    restart: always
    depends_on:
      - mysql
    ports:
      - 8081:80
    environment:
      PMA_HOST: ${PHPMYADMIN_PMA_HOST}
      MYSQL_ROOT_PASSWORD: ${PHPMYADMIN_MYSQL_ROOT_PASSWORD}
      PMA_PORT: ${PHPMYADMIN_PMA_PORT}
  
  # TARGET DB
  postgresdb:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_USER: ${TARGET_DB_USER}
      POSTGRES_PASSWORD: ${TARGET_DB_PASSWORD}
      POSTGRES_DB: ${TARGET_DB_NAME}
    ports:
      - ${TARGET_DB_PORT}:5432
    volumes:
      - ./postgresdb/data:/var/lib/postgresql/data

  pgadmin4:
    image: dpage/pgadmin4:latest
    restart: always
    depends_on:
      - postgresdb
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWOD}
      PGADMIN_LISTEN_PORT: ${PGADMIN_LISTEN_PORT}
    ports:
      - ${PGADMIN_LISTEN_PORT}:8090
    volumes:
      - ./pgadmin/data:/var/lib/pgadmin

  # nginx:
  #   image: nginx
  #   ports:
  #     - 80:80
  #   volumes:
  #     - ./nginx/conf.d:/etc/nginx/conf.d
  #     - ./nginx/nginx.conf:/etc/nginx.conf

  # BUISENSS ANALYTICAL TOOL
  metabase:
    image: metabase/metabase:latest
    ports:
      - ${METABSE_PORT}:3000
    depends_on:
      - metabase-postgres
    environment:
      MB_DB_TYPE: ${METABASE_DB_TYPE}
      MB_DB_DBNAME: ${METABASE_DB_DBNAME}
      MB_DB_PORT: ${METABASE_DB_PORT}
      MB_DB_USER: ${METABASE_DB_USER}
      MB_DB_PASS: ${METABASE_DB_PASSWORD}
      MB_DB_HOST: ${METABASE_DB_HOST}

  metabase-postgres:
    image: postgres:latest
    environment:
      POSTGRES_PASSWORD: ${METABASE_POSTGRES_PASSWORD}
      POSTGRES_USER: ${METABASE_POSTGRES_USER}
      POSTGRES_DB: ${METABASE_POSTGRES_DB}
    volumes:
      - ./metabase/metabase-db:/var/lib/postgresql/data/

  # AIRFLOW
  airflow-postgres:
    image: postgres:latest
    restart: always
    environment:
        - POSTGRES_USER=${AIRFLOW_POSTGRES_USER}
        - POSTGRES_PASSWORD=${AIRFLOW_POSTGRES_PASSWORD}
        - POSTGRES_DB=${AIRFLOW_POSTGRES_DB}
    volumes:
      - ./airflow/airflow-postgres:/var/lib/postgresql/data/

  airflow-webserver:
    build: 
      context: .
      dockerfile: ./Dockerfile
    depends_on:
      - airflow-postgres
    environment:
      - PYTHONDONTWRITEBYTECODE=${PYTHONDONTWRITEBYTECODE}
      - AIRFLOW__CORE__LOAD_EXAMPLES=${AIRFLOW__CORE__LOAD_EXAMPLES}
      - AIRFLOW__CORE__LOAD_DEFAULT_CONNECTIONS=${AIRFLOW__CORE__LOAD_DEFAULT_CONNECTIONS}
      - AIRFLOW__CORE__EXECUTOR=${AIRFLOW__CORE__EXECUTOR}
      - AIRFLOW__CORE__MAX_ACTIVE_RUNS_PER_DAG=${AIRFLOW__CORE__MAX_ACTIVE_RUNS_PER_DAG}
      - AIRFLOW__CORE__SQL_ALCHEMY_CONN=${AIRFLOW__CORE__SQL_ALCHEMY_CONN}
      - AIRFLOW__CORE__FERNET_KEY=${AIRFLOW__CORE__FERNET_KEY}
      - AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION=${AIRFLOW__CORE__DAGS_ARE_PAUSED_AT_CREATION}
      - POSTGRES_HOST=${POSTGRES_HOST}
      - _AIRFLOW_DB_UPGRADE=${_AIRFLOW_DB_UPGRADE}
      - _AIRFLOW_WWW_USER_CREATE=${_AIRFLOW_WWW_USER_CREATE}
      - _AIRFLOW_WWW_USER_USERNAME=${_AIRFLOW_WWW_USER_USERNAME}
      - _AIRFLOW_WWW_USER_PASSWORD=${_AIRFLOW_WWW_USER_PASSWORD}
    volumes:
      # - filesystem:/tmp/filesystem
      - ./airflow/logs:/opt/airflow/logs
      - ./airflow/dags:/opt/airflow/dags
      # - ./plugins:/opt/airflow/plugins
    ports:
      - 8082:8080
    command: bash -c "
      airflow db init && 
      { airflow scheduler & airflow webserver ; }"

  

  


  

  

  
